#
# Copyright INAOS GmbH, Thalwil, 2018. All rights reserved
#
# This software is the confidential and proprietary information of INAOS GmbH
# ("Confidential Information"). You shall not disclose such Confidential
# Information and shall use it only in accordance with the terms of the
# license agreement you entered into with INAOS GmbH.
#
 
branches:
  # whitelist
  only:
    - master
  #  - develop

environment:
  jfrog_repository_url: https://inaos.jfrog.io/inaos/libs-snapshot-local
  jfrog_artifactory_uid: appveyor
  jfrog_artifactory_pwd:
    secure: 2xpsiuGNHwFPtxdh8pA/Mm0I1bC1EfC8NBSoxOEiNco=

  matrix:
    - MY_NAME: Linux Debug 64bit
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu
      BUILD_CONFIGURATION: Debug
      
    - MY_NAME: Linux Release 64bit
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu
      BUILD_CONFIGURATION: RelWithDebInfo

    - MY_NAME: Windows VS 2015 Debug 32bit
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      VSINSTALL: "Microsoft Visual Studio 14.0\\VC"
      MSVC_PLATFORM: x86
      BUILD_CONFIGURATION: Debug
      BUILD_ARCH: x86
      
    - MY_NAME: Windows VS 2015 Debug 64bit
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      VSINSTALL: "Microsoft Visual Studio 14.0\\VC"
      MSVC_PLATFORM: amd64
      BUILD_CONFIGURATION: Debug
      BUILD_ARCH: x86_64

    - MY_NAME: Windows VS 2015 Release 32bit
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      VSINSTALL: "Microsoft Visual Studio 14.0\\VC"
      MSVC_PLATFORM: x86
      BUILD_CONFIGURATION: RelWithDebInfo
      BUILD_ARCH: x86

    - MY_NAME: Windows VS 2015 Release 64bit
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      VSINSTALL: "Microsoft Visual Studio 14.0\\VC"
      MSVC_PLATFORM: amd64
      BUILD_CONFIGURATION: RelWithDebInfo
      BUILD_ARCH: x86_64

    - MY_NAME: Windows VS 2017 Debug 32bit
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VSINSTALL: "Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build"
      MSVC_PLATFORM: x86
      BUILD_CONFIGURATION: Debug
      BUILD_ARCH: x86

    - MY_NAME: Windows VS 2017 Debug 64bit
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VSINSTALL: "Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build"
      MSVC_PLATFORM: amd64
      BUILD_CONFIGURATION: Debug
      BUILD_ARCH: x86_64

    - MY_NAME: Windows VS 2017 Release 32bit
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VSINSTALL: "Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build"
      MSVC_PLATFORM: x86
      BUILD_CONFIGURATION: RelWithDebInfo
      BUILD_ARCH: x86

    - MY_NAME: Windows VS 2017 Release 64bit
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VSINSTALL: "Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build"
      MSVC_PLATFORM: amd64
      BUILD_CONFIGURATION: RelWithDebInfo
      BUILD_ARCH: x86_64

for:
  -
    branches:
      only:
        - master
    environment:
      jfrog_repository_url: https://inaos.jfrog.io/inaos/libs-release-local

  -
    branches:
       only:
        - develop
    environment:
      jfrog_repository_url: https://inaos.jfrog.io/inaos/libs-snapshot-local
      snapshot: -DINAC_SNAPSHOT=1
      
matrix:
  fast_finish: false

init:
  - cmd: C:\"Program Files (x86)"\"%VSINSTALL%"\vcvarsall.bat %MSVC_PLATFORM%
  
cache:
  - C:\ProgramData\chocolatey\lib -> appveyor.yml # on Ubuntu builds this path will not be found
  - /var/cache/apt/archives/inaos-dev-quality-tools_1.0-1.deb # on VS builds this path will not be found

install:
  - sh:  |
         sudo sh -c "echo 'deb https://appveyor:N9z6j8yVukyeLcfE@inaos.jfrog.io/inaos/debian-local xenial main' >> /etc/apt/sources.list"
         sudo wget --http-user=$jfrog_artifactory_uid --http-password=$jfrog_artifactory_pwd -O - https://inaos.jfrog.io/inaos/api/gpg/key/public | sudo apt-key add -
         sudo apt-get update
         sudo apt-get install inaos-dev-quality-tools
  - cmd: |
         choco source add -n "inaos" -s "https://inaos.jfrog.io/inaos/api/nuget/nuget-release-local/" -u %jfrog_artifactory_uid% -p %jfrog_artifactory_pwd%
         choco install inaos-dev-quality-tools -y --force

build_script:
  - sh: |
        mkdir cmake-build-$BUILD_CONFIGURATION
        cd cmake-build-$BUILD_CONFIGURATION
        cmake -G "Unix Makefiles" ../ -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION $snapshot
        make
  - cmd: |
         mkdir cmake-build-%BUILD_CONFIGURATION%
         cd cmake-build-%BUILD_CONFIGURATION%
         cmake -G "NMake Makefiles" ../ -DCMAKE_BUILD_TYPE=%BUILD_CONFIGURATION% -DINAC_TARGET_ARCH=%BUILD_ARCH%  %snapshot%
         nmake
after_build:
  - sh: |
        cpack
  - cmd: |
         cpack

artifacts:
  - path: cmake-build-*/*.zip
    name: INAC
    
deploy_script:
  - ps: |
        $src = $artifacts["INAC"].path
        $artifact_name = Split-Path $src -leaf
        $artifact_name -match "(\d+\.\d+)"
        $artifact_version = $matches[1]
        $target = "inaos/inac/$artifact_version/$artifact_name"
        Write-Host $src
        Write-Host $artifact_name
        Write-Host $artifact_version
        Write-Host $target
        Write-Host $Env:OS
        $user = $env:jfrog_artifactory_uid
        $pwd = $env:jfrog_artifactory_pwd
        $url = "$env:jfrog_repository_url/$target"

        if ($Env:OS -eq "Windows_NT") {
          Write-Host "curl.exe -u${user}:${pwd}  -T $src $url"
          $ret = curl.exe "-u${user}:${pwd}" "-T" $src $url 2>1
        } else {
          $ret = /usr/bin/curl "-u${user}:${pwd}" "-T" $src $url 2>1
        }
        $LastExitCode = 0
